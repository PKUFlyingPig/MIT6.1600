Problem 1:

B) 32 bytes and 64 bytes, but 64 bytes will not add more security because the adversary can directly guess the 32 bytes secret key.

Problem 2:

A) alpha_t = (s1 - s2)^-1 * (Hm1 - Hm2) (mod q), then alpha = (s1 * alpha_t - Hm1) * r1^-1 (mod q)

C) The signing nonce is sampled from {1, 2, ..., 2^128}, due to birthday paradox, after an attacker obtains 2^64 signatures, there exists two signatures that signed with the same signing nonce with constant probability. From B), we can recover the secret key from the two signatures.

Problem 3:

A) How many frames can be sent per second:​ 11Mbps / 2312 bytes ≈ 594.59 frames/s
   Since IV is 24 bits long, due to birthday paradox, in 2^12 frames, there are two using the same IV. So an attacker have to wait 2^12 / 594.59 ≈ 6.89 s to see two frames using the same IV.

When two frames are encrypted with the same IV and the same secret key, it's possible to launch a stream cipher attack. By XORing the two ciphertexts together, the attacker can essentially cancel out the keystream, effectively XORing the two plaintexts together. If the attacker knows or can guess a portion of one of the plaintexts (e.g., a header that follows a known format), they can recover that same portion of the other plaintext.

Extra Credit:

A)


B)


C)